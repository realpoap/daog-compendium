// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider         = "zod-prisma-types"
  output           = "../src/lib/zod-prisma"
  useMultipleFiles = false
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  password  String   @unique
  isOwner   Boolean  @default(false)
  role      Role     @default(VIEWER)
  createdAt DateTime @default(now())

  @@unique([name, password])
}

enum Role {
  VIEWER
  EDITOR
  ADMIN
}

model Creature {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  fullname        String       @unique
  name            String
  rank            String?
  isBoss          Boolean?     @default(false)
  type            Type?
  subtype         String?
  alignment       Alignment?
  size            CreatureSize?
  createdAt       DateTime?    @default(now())
  updatedAt       DateTime?    @updatedAt
  level           Int
  initiative      Int?
  attack          Int
  attackBonus     Int?
  defense         Int
  defenseBonus    Int?
  ranged          Int
  rangedBonus     Int?
  health          Int
  armor           Int?
  perception      Int
  perceptionBonus Int?
  discretion      Int?
  discretionBonus Int?
  magic           Int?
  spirit          Int?
  glory           Int?
  stats           StatProfil
  loot            CreatureItem[]
  scavenge        CreatureComponent[]
  actionList      ActionList
  attributes      CreatureAttribute[]
  flavor          String?
  description     String?
  actions         CreatureAction[]
}

type CreatureAttribute {
  name        String
  flavor      String?
  description String?
}

model Attribute {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  flavor      String?
  description String?
}

enum Type {
  beast
  critter
  demon
  fae
  golem
  insect
  monster
  oddity
  person
  plant
  undead
  wyrm
}

enum Alignment {
  saint
  good
  neutral
  bad
  evil
}

type ActionList {
  main    Int  @default(1)
  limited Int?
  free    Int?
  travel  Int?
  epic    Int  @default(0)
}

enum ActionTarget {
  single
  multiple
  random
  self
  terrain
  none
}

type CreatureAction {
  searchName  String
  name        String
  action      ActionType
  type        SpellAction
  flavor      String?
  description String?
  damages     String?
  effects     String?
  heal        String?
  target      ActionTarget
  range       String?
}

model Action {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  searchName        String     @unique
  name  String
  action      ActionType
  type        SpellAction
  flavor      String?
  description String?
  damages     String?
  effects     String?
  heal        String?
  target      ActionTarget
  range       String?
}

enum ActionType {
  main
  limited
  free
  travel
  epic
}

enum CreatureSize {
  tiny
  small
  average
  large
  huge
  gigantic
}

type StatProfil {
  CEL Int
  AGI Int
  DEX Int
  STR Int
  END Int
  VIT Int
  WIL Int
  INS Int
  SEN Int
  CHA Int
  SOC Int
  ERU Int
}

model Spell {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  number      Int           @unique
  titleGlaise String?
  titleCommon String
  createdAt   DateTime?     @default(now())
  updatedAt   DateTime?     @updatedAt
  level       Int
  type        SpellType
  cost        Int
  difficulty  Int
  casting     SpellCasting?
  targetType  SpellTarget?
  action      SpellAction?
  flavor      String?
  description String
  damages     String?
  heal        String?
  effects     String?
  range       String?
  duration    String?
  target      String?
  components  String?
}

model Component {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  searchName  String    @unique
  name  String
  quantity    Float?
  description String?
  weight      Float?
  value       Float?
  valueWeight Float?
  rarity      String?
  uses        String?
}

type CreatureComponent {
  name        String    
  quantity    Float?
  description String?
  weight      Float?
  value       Float?
  valueWeight Float?
  rarity      String?
  uses        String?
}

model Item {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity    Float?
  searchName        String   @unique
  name  String
  description String?
  weight      Float?
  value       Float?
  valueWeight Float?
  rarity      String?
  damages     String?
  armor       Int?
  properties  String?
  isRelic     Boolean?
  magicWeight Int?
}

type CreatureItem {
  name        String
  quantity    Float?
  description String?
  weight      Float?
  value       Float?
  valueWeight Float?
  rarity      String?
  damages     String?
  armor       Int?
  properties  String?
  isRelic     Boolean?
  magicWeight Int?
}

enum SpellType {
  mouflette
  beast
  nature
  scourge
  spirit
  death
  life
  earth
  fire
  water
  air
  blood
}

enum SpellAction {
  charm
  damage
  heal
  protect
  enhance
  link
  create
  transform
  move
  remove
  restrain
  puzzle
}

enum SpellCasting {
  instant
  delayed
  ritual
  concentration
  upkeep
}

enum SpellTarget {
  single
  multiple
  random
  self
  terrain
  none
}
